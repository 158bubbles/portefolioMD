# -*- coding: utf-8 -*-
"""F_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17iqeejyuw1rIcO-MsZYXmLlDDw456RdL
"""

from dataset import Dataset

import numpy as np
from scipy.stats import f
from sklearn.linear_model import LinearRegression

def f_regression(dataset: Dataset):

    X = dataset.X
    y = dataset.y

    #new column of ones to X
    X = np.hstack((X, np.ones((X.shape[0], 1))))

    #linear regression
    beta, _, _, _ = np.linalg.lstsq(X, y, rcond=None)

    #the predicted values and residuals
    residuals = y - np.dot(X, beta)

    SST = np.sum((y - np.mean(y)) ** 2)
    SSR = np.sum(residuals ** 2)
    
    n = X.shape[0]
    p = dataset.X.shape[1]  # number of features in the dataset
    

    F_values = (SST - SSR) / p / (SSR / (n-p-1))
    p_values = 1 - f.cdf(F_values, p, (n-p-1))

    return F_values, p_values

#dataset = Dataset().from_csv('/content/train.csv')
dataset = Dataset(X=np.array([[0, 1, 7, 3],
                              [1, 4, 0, 7],
                              [8, 4, 8, 1]]),
                  y=np.array([0, 1, 0]),
                  features=["f1", "f2", "f3", "f4"],
                  label="y")

F_values, p_values = f_regression(dataset)

print("P_values:", p_values)
print("F_values:", F_values)