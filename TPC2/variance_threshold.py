# -*- coding: utf-8 -*-
"""variance_threshold.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/155cxG3fyJfoatVrsdNtBOwzX2UZSPtJx
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext autoreload
# %autoreload 2

import numpy as np
from tpc1 import Dataset



class VarianceThreshold:
    #class that can be used to remove features with low variance

    def __init__(self, threshold: float = 0.0):
        
        if threshold < 0:
            raise ValueError("Sorry, Threshold must be >= 0")

        self.threshold = threshold

        self.variance = None


    def fit(self, dataset : Dataset) -> 'VarianceThreshold':
        #calculates the variances of each feature in the input data

        self.variance = np.var(dataset.X, axis=0)

        return self

    def transform(self, dataset : Dataset) -> Dataset:
        #applies the variance thresholding to the input data

        X = dataset.X
        
        new_features = self.variance > self.threshold
        X = X[:,new_features]
        features = np.array(dataset.feature_names)[new_features]

        return Dataset(X=X,y=dataset.y, feature_names=list(features),label_name = dataset.label_name)

    def fit_transform(self, dataset : Dataset) -> Dataset:
        #applies both fitting and transforming in only one step

        self.fit(dataset)
        res = self.transform(dataset)

        return res